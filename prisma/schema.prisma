generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  walletAddress String      @id // Tidak nullable, sebagai primary key
  name          String?     // Nullable
  email         String?     @unique // Nullable, tapi unik jika diisi
  password      String?     // Nullable
  createdAt     DateTime?   // Nullable, tanpa default
  templates     Template[]  // Relasi ke Template
}

model Template {
  id         Int       @id @default(autoincrement())
  userId     String    @db.VarChar(255)
  user       User      @relation(fields: [userId], references: [walletAddress]) // Relasi ke User
  name       String    @db.VarChar(255) 
  filePath   String    @db.VarChar(255) 
  nameX      Float?    // Koordinat X untuk posisi nama (persentase, nullable)
  nameY      Float?    // Koordinat Y untuk posisi nama (persentase, nullable)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  certificates Certificate[] 
}

model Certificate {
  id               Int       @id @default(autoincrement())
  certificateNumber String    @unique @db.VarChar(50)
  templateId       Int       
  template         Template  @relation(fields: [templateId], references: [id])
  recipientName    String    @db.VarChar(100)
  certificateTitle String    @db.VarChar(200)
  issueDate        DateTime  
  expiryDate       DateTime? 
  description      String?   @db.Text
  issuerName       String    @db.VarChar(100)
  signaturePath    String?   @db.VarChar(255)
  category         String?   @db.VarChar(50)
  targetAddress    String    @db.VarChar(42)
  issuerAddress    String    @db.VarChar(42)
  hash             String?   @db.VarChar(64)
  qrCodeUrl        String?   @db.VarChar(255)
  filePath         String    @db.VarChar(255)
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
}